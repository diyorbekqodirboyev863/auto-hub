# Generated by Django 5.1 on 2024-08-10 04:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(max_length=128)),
                ('model', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_type', models.CharField(choices=[('Sedan', 'Sedan'), ('Coupe', 'Coupe'), ('Sportscars', 'Sportscars'), ('Station wagon', 'Station wagon'), ('Hatchback', 'Hatchback'), ('Convertible', 'Convertible'), ('SUV', 'Sport-utility vehicle (SUV)'), ('Minivan', 'Minivan'), ('Pickup truck', 'Pickup truck'), ('Jeep', 'Jeep'), ('Electric car', 'Electric car'), ('CUV', 'CUV/Crossover'), ('Spyder', 'Spyder'), ('Hot hatch', 'Hot hatch'), ('Limousine', 'Limousine'), ('UTE', 'UTE'), ('Pony car', 'Pony car'), ('Sports sedan', 'Sports sedan'), ('Military vehicle', 'Military vehicle'), ('Dragster', 'Dragster')], default='Sedan', max_length=50)),
                ('exterior_type', models.CharField(choices=[('Metallic', 'Metallic'), ('Pearlescent', 'Pearlescent'), ('Matte', 'Matte'), ('Glossy', 'Glossy'), ('Solid', 'Solid'), ('Two-tone', 'Two-tone'), ('Chrome', 'Chrome'), ('Carbon Fiber', 'Carbon Fiber'), ('Vinyl Wrap', 'Vinyl Wrap'), ('Custom Paint', 'Custom Paint'), ('Convertible Top', 'Convertible Top'), ('Soft Top', 'Soft Top'), ('Hard Top', 'Hard Top'), ('Sunroof', 'Sunroof'), ('Panoramic Sunroof', 'Panoramic Sunroof'), ('Targa Top', 'Targa Top'), ('Widebody Kit', 'Widebody Kit'), ('Off-road Kit', 'Off-road Kit'), ('Racing Livery', 'Racing Livery')], default='Metallic', max_length=50)),
                ('vin', models.CharField(max_length=128)),
                ('miles', models.IntegerField()),
                ('interior_type', models.CharField(choices=[('Leather', 'Leather'), ('Cloth', 'Cloth'), ('Vinyl', 'Vinyl'), ('Suede', 'Suede'), ('Alcantara', 'Alcantara'), ('Wood Trim', 'Wood Trim'), ('Carbon Fiber Trim', 'Carbon Fiber Trim'), ('Metal Trim', 'Metal Trim'), ('Leatherette', 'Leatherette'), ('Velour', 'Velour'), ('Nappa Leather', 'Nappa Leather'), ('Synthetic Leather', 'Synthetic Leather'), ('Two-tone Interior', 'Two-tone Interior'), ('Quilted Leather', 'Quilted Leather'), ('Perforated Leather', 'Perforated Leather'), ('Sport Seats', 'Sport Seats'), ('Luxury Seats', 'Luxury Seats'), ('Bucket Seats', 'Bucket Seats'), ('Heated Seats', 'Heated Seats'), ('Cooled Seats', 'Cooled Seats'), ('Massaging Seats', 'Massaging Seats'), ('Ambient Lighting', 'Ambient Lighting'), ('Custom Interior', 'Custom Interior')], default='Leather', max_length=50)),
                ('stock', models.CharField(max_length=50)),
                ('drive_type', models.CharField(choices=[('FWD', 'Front-Wheel Drive (FWD)'), ('RWD', 'Rear-Wheel Drive (RWD)'), ('AWD', 'All-Wheel Drive (AWD)'), ('4WD', 'Four-Wheel Drive (4WD)'), ('Part-Time 4WD', 'Part-Time 4WD'), ('Full-Time 4WD', 'Full-Time 4WD'), ('4WS', 'Four-Wheel Steering (4WS)'), ('Electric', 'Electric Drive'), ('Hybrid', 'Hybrid Drive'), ('Plug-in Hybrid', 'Plug-in Hybrid Drive')], default='FWD', max_length=50)),
                ('engine_type', models.CharField(choices=[('Inline-4', 'Inline-4 (I4)'), ('V6', 'V6'), ('V8', 'V8'), ('V10', 'V10'), ('V12', 'V12'), ('Inline-3', 'Inline-3 (I3)'), ('Inline-5', 'Inline-5 (I5)'), ('Flat-4', 'Flat-4 (Boxer)'), ('Flat-6', 'Flat-6 (Boxer)'), ('W12', 'W12'), ('Electric', 'Electric'), ('Hybrid', 'Hybrid'), ('Turbocharged', 'Turbocharged'), ('Supercharged', 'Supercharged'), ('Diesel', 'Diesel'), ('Rotary', 'Rotary (Wankel)'), ('Plug-in Hybrid', 'Plug-in Hybrid'), ('Hydrogen', 'Hydrogen Fuel Cell'), ('Turbo Diesel', 'Turbo Diesel'), ('Twin-Turbo', 'Twin-Turbo')], default='Inline-4', max_length=50)),
                ('transmission_type', models.CharField(choices=[('Manual', 'Manual'), ('Automatic', 'Automatic'), ('Semi-Automatic', 'Semi-Automatic'), ('CVT', 'CVT (Continuously Variable Transmission)'), ('Dual-Clutch', 'Dual-Clutch'), ('Tiptronic', 'Tiptronic'), ('DSG', 'DSG (Direct-Shift Gearbox)'), ('AMT', 'AMT (Automated Manual Transmission)'), ('4-Speed Automatic', '4-Speed Automatic'), ('5-Speed Automatic', '5-Speed Automatic'), ('6-Speed Automatic', '6-Speed Automatic'), ('7-Speed Automatic', '7-Speed Automatic'), ('8-Speed Automatic', '8-Speed Automatic'), ('9-Speed Automatic', '9-Speed Automatic'), ('10-Speed Automatic', '10-Speed Automatic'), ('5-Speed Manual', '5-Speed Manual'), ('6-Speed Manual', '6-Speed Manual'), ('7-Speed Manual', '7-Speed Manual'), ('8-Speed Manual', '8-Speed Manual'), ('Electric Single-Speed', 'Electric Single-Speed')], default='Manual', max_length=50)),
                ('color', models.CharField(max_length=50)),
                ('mpg', models.DecimalField(decimal_places=1, max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('year', models.IntegerField(choices=[(1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)])),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.car')),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awd_4wd', models.BooleanField(default=False, verbose_name='AWD/4WD Availability')),
                ('navigation_system', models.BooleanField(default=False, verbose_name='Navigation System Availability')),
                ('leather_seats', models.BooleanField(default=False, verbose_name='Leather Seats Availability')),
                ('sunroof_moonroof', models.BooleanField(default=False, verbose_name='Sunroof/Moonroof Availability')),
                ('panoramic_roof', models.BooleanField(default=False, verbose_name='Panoramic Roof Availability')),
                ('third_row_seating', models.BooleanField(default=False, verbose_name='Third-Row Seating Availability')),
                ('premium_package', models.BooleanField(default=False, verbose_name='Premium Package Availability')),
                ('oversized_wheels', models.BooleanField(default=False, verbose_name='Oversized Wheels (20-inch+) Availability')),
                ('four_doors', models.BooleanField(default=False, verbose_name='Four Doors Availability')),
                ('android_auto', models.BooleanField(default=False, verbose_name='Android Auto Availability')),
                ('apple_carplay', models.BooleanField(default=False, verbose_name='Apple CarPlay Availability')),
                ('auto_climate_control', models.BooleanField(default=False, verbose_name='Auto Climate Control Availability')),
                ('automatic_headlights', models.BooleanField(default=False, verbose_name='Automatic Headlights Availability')),
                ('blind_spot_monitor', models.BooleanField(default=False, verbose_name='Blind Spot Monitor Availability')),
                ('bluetooth', models.BooleanField(default=False, verbose_name='Bluetooth Availability')),
                ('collision_avoidance', models.BooleanField(default=False, verbose_name='Collision Avoidance Availability')),
                ('compact_disc_player', models.BooleanField(default=False, verbose_name='Compact Disc Player Availability')),
                ('cruise_control', models.BooleanField(default=False, verbose_name='Cruise Control Availability')),
                ('electric_folding_rear_seats', models.BooleanField(default=False, verbose_name='Electric Folding Rear Seats Availability')),
                ('foglights', models.BooleanField(default=False, verbose_name='Foglights Availability')),
                ('heated_mirrors', models.BooleanField(default=False, verbose_name='Heated Mirrors Availability')),
                ('heated_seats', models.BooleanField(default=False, verbose_name='Heated Seats Availability')),
                ('heated_steering_wheel', models.BooleanField(default=False, verbose_name='Heated Steering Wheel Availability')),
                ('heated_cooled_seats', models.BooleanField(default=False, verbose_name='Heated/Cooled Seats Availability')),
                ('lane_departure_warning', models.BooleanField(default=False, verbose_name='Lane Departure Warning Availability')),
                ('led_headlights', models.BooleanField(default=False, verbose_name='LED Headlights Availability')),
                ('luggage_rack', models.BooleanField(default=False, verbose_name='Luggage Rack Availability')),
                ('power_door_locks', models.BooleanField(default=False, verbose_name='Power Door Locks Availability')),
                ('power_driver_seat', models.BooleanField(default=False, verbose_name='Power Driver Seat Availability')),
                ('power_mirrors', models.BooleanField(default=False, verbose_name='Power Mirrors Availability')),
                ('power_passenger_seat', models.BooleanField(default=False, verbose_name='Power Passenger Seat Availability')),
                ('power_tilt_wheel', models.BooleanField(default=False, verbose_name='Power Tilt Wheel Availability')),
                ('power_windows', models.BooleanField(default=False, verbose_name='Power Windows Availability')),
                ('premium_sound_system', models.BooleanField(default=False, verbose_name='Premium Sound System Availability')),
                ('privacy_glass', models.BooleanField(default=False, verbose_name='Privacy Glass Availability')),
                ('push_button_start', models.BooleanField(default=False, verbose_name='Push Button Start Availability')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.car')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='cars/')),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.car')),
            ],
        ),
    ]
